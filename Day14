# User function template for Python
class Solution:
    def myAtoi(self, str):
        # Define constants for INT_MAX and INT_MIN
        INT_MAX = 2**31 - 1
        INT_MIN = -2**31
        
        # Remove leading whitespaces
        s = str.lstrip()
        if not s:
            return 0

        # Determine the sign
        sign = 1
        if s[0] == '-':
            sign = -1
            s = s[1:]
        elif s[0] == '+':
            s = s[1:]

        # Extract numeric characters
        num = 0
        for char in s:
            if char.isdigit():
                num = num * 10 + int(char)
            else:
                break

        # Apply the sign
        num *= sign

        # Handle overflow cases
        if num < INT_MIN:
            return INT_MIN
        if num > INT_MAX:
            return INT_MAX

        return num


# { 
# Driver Code Starts
# Initial template for Python

if __name__ == '__main__':
    t = int(input())
    for i in range(t):
        s = input()
        ob = Solution()
        print(ob.myAtoi(s))
        print("~")
# } Driver Code Ends
